<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd 
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd 
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/task
    	http://www.springframework.org/schema/task/spring-task-4.0.xsd
        ">
        
        <!-- 激活自动代理功能 -->
	    <aop:aspectj-autoproxy proxy-target-class="true" /> 
	    <!-- <context:component-scan base-package="com.baomidou.framework" />  -->
        <context:component-scan base-package="org.ssm.summer" />
	
	    <!-- 扫描切面包路径 -->
	   <!--  <bean id="logAspect" class="com.baomidou.framework.aop.LogAspect">
	        <property name="logPoint">
	            <bean class="org.ssm.summer.service.impl.LogServiceImpl" />
	        </property>
	    </bean>
	    <aop:config>
	        <aop:aspect ref="logAspect">
	            <aop:pointcut id="logPointCut" expression="@annotation(com.baomidou.framework.annotations.Log)" />
	            <aop:around pointcut-ref="logPointCut" method="saveLog" />
	        </aop:aspect>
	    </aop:config>  -->
        
        <!-- <mvc:interceptors>
	        权限拦截器
	        <mvc:interceptor>
	            <mvc:mapping path="/**" />
	            <bean class="com.baomidou.kisso.web.interceptor.SSOPermissionInterceptor">
	                <property name="authorization">
	                    <bean class="org.ssm.summer.service.impl.PermissionServiceImpl"/>
	                </property>
	                <property name="illegalUrl" value="/error/illegalAccess.html"/>
	            </bean>
	        </mvc:interceptor>
	        <bean class="com.baomidou.framework.spring.DataLoadingInterceptor" />	        
        </mvc:interceptors> -->
        
        
<!--    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
        <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" /> -->
	    <!-- 如果不写以下配置,就必须写上边两行,否则(handler instanceof HandlerMethod)==fasle -->
	    <mvc:annotation-driven>
	        <!-- 编码转换 -->
	        <mvc:message-converters>
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	                <property name="supportedMediaTypes">
	                    <list>
	                        <value>text/plain;charset=UTF-8</value>
	                        <value>text/html;charset=UTF-8</value>
	                        <value>application/json;charset=UTF-8</value>
	                    </list>
	                </property>
	            </bean>
	        </mvc:message-converters>
	    </mvc:annotation-driven> 
        <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
        <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
            <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
            <property name="prefix" value="/WEB-INF/view/" />  
            <property name="suffix" value=".jsp" />  
        </bean>      
    </beans>
