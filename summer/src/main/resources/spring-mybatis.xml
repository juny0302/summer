<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
        xmlns:context="http://www.springframework.org/schema/context"  
        xmlns:mvc="http://www.springframework.org/schema/mvc"  
        xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/websocket 
        http://www.springframework.org/schema/websocket/spring-websocket.xsd 
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd 
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/task
    	http://www.springframework.org/schema/task/spring-task-4.0.xsd
    	http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
        ">  
          
        <!-- 引入配置文件 -->  
        <bean id="propertyConfigurer"  
            class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
            <property name="location" value="classpath:properties/dbconfig.properties" />  
        </bean>  
      
        <!-- 阿里 druid 数据库连接池 -->
	    <bean id = "dataSource" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method = "close" >
	         <!-- 数据库基本信息配置 -->
	         <property name = "url" value = "${url}" /> 
	         <property name = "username" value = "${username}" /> 
	         <property name = "password" value = "${password}" />
	         <property name = "driverClassName" value = "${driverClassName}" /> 
	         <property name = "filters" value = "${filters}" />  
	         <!-- 最大并发连接数 -->
	         <property name = "maxActive" value = "${maxActive}" />
	         <!-- 初始化连接数量 -->
	         <property name = "initialSize" value = "${initialSize}" />
	         <!-- 配置获取连接等待超时的时间 -->
	         <property name = "maxWait" value = "${maxWait}" />
	         <!-- 最小空闲连接数 -->
	         <property name = "minIdle" value = "${minIdle}" /> 
	         <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	         <property name = "timeBetweenEvictionRunsMillis" value = "${timeBetweenEvictionRunsMillis}" />
	         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	         <property name = "minEvictableIdleTimeMillis" value = "${minEvictableIdleTimeMillis}" /> 
	         <property name = "validationQuery" value = "${validationQuery}" />  
	         <property name = "testWhileIdle" value = "${testWhileIdle}" /> 
	         <property name = "testOnBorrow" value = "${testOnBorrow}" /> 
	         <property name = "testOnReturn" value = "${testOnReturn}" />
	         <property name = "maxOpenPreparedStatements" value = "${maxOpenPreparedStatements}" />
	         <!-- 打开 removeAbandoned 功能 -->
	         <property name = "removeAbandoned" value = "${removeAbandoned}" />
	         <!-- 1800 秒，也就是 30 分钟 -->
	         <property name = "removeAbandonedTimeout" value = "${removeAbandonedTimeout}" />
	         <!-- 关闭 abanded 连接时输出错误日志 -->
	         <property name = "logAbandoned" value = "${logAbandoned}" />
	    </bean >   
      
        <!-- Spring整合Mybatis，更多查看文档：http://mp.baomidou.com -->
	    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
	        <property name="dataSource" ref="dataSource"/>
	        <property name="configLocation" value="classpath:xml/mybatis-config.xml" />
	        <property name="typeAliasesPackage" value="org.ssm.summer.*" />
            <property name="mapperLocations" value="classpath:org/ssm/summer/mapper/xml/*Mapper.xml" />
	        <property name="plugins">
	            <array>
	                <!-- 分页插件配置 -->
	                <bean id="paginationInterceptor" class="com.baomidou.mybatisplus.plugins.PaginationInterceptor">
	                </bean>
	            </array>
	        </property>
	        <!-- 全局配置注入 -->
	        <property name="globalConfig" ref="globalConfig" />
	    </bean>
	    <bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
	        <!-- 
	            AUTO->`0`("数据库ID自增")
	            INPUT->`1`(用户输入ID")
	            ID_WORKER->`2`("全局唯一ID")
	            UUID->`3`("全局唯一ID")
	        -->
	        <property name="idType" value="2" />
	        <!--
	            MYSQL->`mysql`
	            ORACLE->`oracle`
	            DB2->`db2`
	            H2->`h2`
	            HSQL->`hsql`
	            SQLITE->`sqlite`
	            POSTGRE->`postgresql`
	            SQLSERVER2005->`sqlserver2005`
	            SQLSERVER->`sqlserver`
	        -->
	        <!-- 全局表为下划线命名设置 true -->
	        <!-- <property name="dbColumnUnderline" value="true" /> -->

	        <!-- 不使用自动填充功能,注释掉以下property -->
	        <!-- <property name="metaObjectHandler">
	            <bean class="org.ssm.summer.common.MyMetaObjectHandler" />
	        </property> -->
	    </bean>
	
	    <!-- MyBatis 动态扫描  -->
	    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	        <property name="basePackage" value="org.ssm.summer.mapper"/>
	    </bean>
      
        <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
        <bean id="transactionManager"  
            class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
            <property name="dataSource" ref="dataSource" />  
        </bean>  
      
    </beans>  